package br.edu.ifnmg.wellington.apresentacao;

import br.edu.ifnmg.wellington.entidade.Usuario;
import br.edu.ifnmg.wellington.exception.LoginInvalidoException;
import br.edu.ifnmg.wellington.exception.SenhaInvalidaException;
import br.edu.ifnmg.wellington.exception.SenhaNaoConfirmadaException;
import br.edu.ifnmg.wellington.negocio.UsuarioBO;
import br.edu.ifnmg.wellington.persistencia.UsuarioDAO;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Were
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public ListagemUsuarios telaListagemUsuarios;
    public TelaDeUsuarios telaDeUsuario;
    public Usuario usuarioEmEdicao = new Usuario();
    public int estadoUsuario = 0; //sem usuario
    public int estadoSenha = 0; //

    public TelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        lblConfirmaSenha = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnLogoff = new javax.swing.JButton();
        btnAlterarSenha = new javax.swing.JButton();
        btnConfirmaSenha = new javax.swing.JButton();
        txtSenha = new javax.swing.JPasswordField();
        txtConfirmaSenha = new javax.swing.JPasswordField();
        txtLogin = new javax.swing.JFormattedTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuGestao = new javax.swing.JMenu();
        mnuItemUsuario = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        MenuVendas = new javax.swing.JMenu();
        MenuAjuda = new javax.swing.JMenu();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Principal");
        setResizable(false);

        lblLogin.setText("Login");

        lblSenha.setText("Senha");

        lblConfirmaSenha.setText("Confirma Senha");
        lblConfirmaSenha.setEnabled(false);

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogoff.setText("LogOff");
        btnLogoff.setEnabled(false);
        btnLogoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoffActionPerformed(evt);
            }
        });

        btnAlterarSenha.setText("Alterar Senha");
        btnAlterarSenha.setEnabled(false);
        btnAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarSenhaActionPerformed(evt);
            }
        });

        btnConfirmaSenha.setText("Confirma Senha");
        btnConfirmaSenha.setEnabled(false);
        btnConfirmaSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaSenhaActionPerformed(evt);
            }
        });

        txtConfirmaSenha.setEnabled(false);

        try {
            txtLogin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblConfirmaSenha)
                    .addComponent(lblSenha)
                    .addComponent(lblLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSenha)
                    .addComponent(txtConfirmaSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(txtLogin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnLogoff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAlterarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConfirmaSenha)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogin)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirmaSenha)
                    .addComponent(txtConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnLogoff)
                    .addComponent(btnAlterarSenha)
                    .addComponent(btnConfirmaSenha))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        MenuGestao.setText("Gestão");

        mnuItemUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        mnuItemUsuario.setText("Usuários");
        mnuItemUsuario.setEnabled(false);
        mnuItemUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemUsuarioActionPerformed(evt);
            }
        });
        MenuGestao.add(mnuItemUsuario);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Listagem de usuários");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuGestao.add(jMenuItem1);

        jMenuBar1.add(MenuGestao);

        MenuVendas.setText("Vendas");
        jMenuBar1.add(MenuVendas);

        MenuAjuda.setText("Ajuda");
        jMenuBar1.add(MenuAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuItemUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemUsuarioActionPerformed
        if (this.telaDeUsuario == null) {
            this.telaDeUsuario = new TelaDeUsuarios();
        }
        this.telaDeUsuario.setVisible(true);
        this.telaDeUsuario.toFront();

    }//GEN-LAST:event_mnuItemUsuarioActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {
            this.recupararDadosLogin();
        } catch (LoginInvalidoException l) {
            String mensagem = "Aviso!\n" + l.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Login", JOptionPane.WARNING_MESSAGE);
            l.printStackTrace(System.out);
        } catch (SenhaInvalidaException s) {
            String mensagem = "Aviso!\n" + s.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Login", JOptionPane.WARNING_MESSAGE);
            s.printStackTrace(System.out);
        } catch (SQLException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnLogoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoffActionPerformed
        this.limparCamposTela();
    }//GEN-LAST:event_btnLogoffActionPerformed

    private void btnConfirmaSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaSenhaActionPerformed
        try {
            this.modificarSenha();
        } catch (SenhaNaoConfirmadaException si) {
            String mensagem = "Aviso!\n" + si.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Login", JOptionPane.WARNING_MESSAGE);
            si.printStackTrace(System.out);
        } catch (SQLException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConfirmaSenhaActionPerformed

    private void btnAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarSenhaActionPerformed
        this.alteraEstadoSenha();
        this.editarConfirmarSenha();
    }//GEN-LAST:event_btnAlterarSenhaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (this.telaListagemUsuarios == null) {
            try {
                this.telaListagemUsuarios = new ListagemUsuarios();
            } catch (SQLException ex) {
                Logger.getLogger(TelaDeUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            telaListagemUsuarios.carregarTabelaDeUsuarios();
        } catch (SQLException ex) {
            Logger.getLogger(TelaDeUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.telaListagemUsuarios.setVisible(true);
        this.telaListagemUsuarios.toFront();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAjuda;
    private javax.swing.JMenu MenuGestao;
    private javax.swing.JMenu MenuVendas;
    private javax.swing.JButton btnAlterarSenha;
    private javax.swing.JButton btnConfirmaSenha;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogoff;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel lblConfirmaSenha;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JMenuItem mnuItemUsuario;
    private javax.swing.JPasswordField txtConfirmaSenha;
    private javax.swing.JFormattedTextField txtLogin;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables

    private void recupararDadosLogin() throws SQLException {
        if (txtLogin.getText().trim().equals("")) {
            throw new LoginInvalidoException("O campo de login está vazio\n");
        } else {
            usuarioEmEdicao.setLogin(txtLogin.getText().trim());
        }
        if (txtSenha.getText().trim().equals("")) {
            throw new SenhaInvalidaException("Campo Senha está vazio\n");
        } else {
            usuarioEmEdicao.setSenha(txtSenha.getText().trim());
        }
        this.verificaSenha();
    }

    private void verificaSenha() throws SQLException {
        UsuarioBO usuarioBO = new UsuarioBO();
        Usuario usuario = usuarioBO.buscarUsuarioPorLogin(usuarioEmEdicao.getLogin());

        if (usuario.getSenha() == null || usuario.getLogin() == null) {
            throw new SenhaInvalidaException("Senha ou Usuário não confere com cadastrada.");
        }

        if (usuario.getLogin().equals(usuarioEmEdicao.getLogin()) && usuario.getSenha().equals(usuarioEmEdicao.getSenha())) {
            this.estadoUsuario = 1; //com usuario            
        } else {
            throw new SenhaInvalidaException("Senha ou Usuário não confere com cadastrada.");
        }

        if (usuario.getLogin().length() < 1 || usuario.getLogin().length() > 8) {
            throw new LoginInvalidoException("O campo de login deve ter o mínimo um e no máximo 8 caracteres alfanuméricos.");
        }
        verificaEstadoUsuario();
    }

    private void limparCamposTela() {
        txtLogin.setText("");
        txtSenha.setText("");
        txtConfirmaSenha.setText("");
        mudaEstadoTelaParaSemUsuario();
    }

    private void mudaEstadoTelaParaSemUsuario() {
        this.estadoUsuario = 0;
        mnuItemUsuario.enable(false);
        btnLogin.setEnabled(true);
        btnLogoff.setEnabled(false);
        btnAlterarSenha.setEnabled(false);
        lblLogin.enable(true);
        lblLogin.setBackground(Color.black);
        lblSenha.enable(true);
        lblSenha.setBackground(Color.black);
        lblConfirmaSenha.enable();
        lblConfirmaSenha.setBackground(Color.black);
        txtLogin.enable();
        txtSenha.enable();
        txtConfirmaSenha.enable();
    }

    private void verificaEstadoUsuario() {
        if (estadoUsuario == 1) {
            mnuItemUsuario.setEnabled(true);
            btnLogin.setEnabled(false);
            btnLogoff.setEnabled(true);
            btnAlterarSenha.setEnabled(true);
            lblLogin.disable();
            lblLogin.setBackground(Color.gray);
            lblSenha.disable();
            lblSenha.setBackground(Color.gray);
            lblConfirmaSenha.disable();
            lblConfirmaSenha.setBackground(Color.gray);
            txtLogin.disable();
            txtSenha.disable();
            txtConfirmaSenha.disable();
        }
    }

    private void alteraEstadoSenha() {
        this.estadoSenha = 1; //alteração de senha
    }

    private void editarConfirmarSenha() {
        if (estadoSenha == 1) {
            btnConfirmaSenha.setEnabled(true);
        }
        lblSenha.enable(true);
        lblSenha.setBackground(Color.black);
        lblConfirmaSenha.enable();
        lblConfirmaSenha.setBackground(Color.black);
        txtSenha.enable();
        txtConfirmaSenha.enable();
    }

    private void modificarSenha() throws SQLException {
        if (txtSenha.getText().trim().equals(txtConfirmaSenha.getText().trim())) {
            UsuarioBO usuarioBO = new UsuarioBO();
            usuarioEmEdicao.setSenha(txtConfirmaSenha.getText().trim());
            usuarioBO.atualizarSenha(usuarioEmEdicao);
        } else {
            throw new SenhaNaoConfirmadaException("Senha não confirmada!");
        }
        txtConfirmaSenha.setText("");
        this.verificaEstadoUsuario();
    }
}
